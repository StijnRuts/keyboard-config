#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,physical-layout = &foostan_corne_5col_layout;
  };
};


#define DEFAULT   0
#define S_DEFAULT 1
#define SYMBOLS   2
#define S_SYMBOLS 3
#define NUM_NAV   4


#define  ___  &trans
#define  _x_  &none

#define  HYPER  LC(LA(LS(LGUI)))


// DEFAULT

#define  RAISE  &mo SYMBOLS
#define  LOWER  &mo NUM_NAV

#define  __a  &kp Q
#define  __z  &kp W
#define  __e  &kp E
#define  __r  &kp R
#define  __t  &kp T
#define  __y  &kp Y
#define  __u  &kp U
#define  __i  &kp I
#define  __o  &kp O
#define  __p  &kp P

#define  __H_q  &mt HYPER  A
#define  __A_s  &mt LALT   S
#define  __C_d  &mt LCTRL  D
#define  __S_f  &lt S_DEFAULT F
#define  __M_g  &mt LGUI   G
#define  __M_h  &mt LGUI   H
#define  __S_j  &lt S_DEFAULT J
#define  __C_k  &mt LCTRL  K
#define  __A_l  &mt LALT   L
#define  __H_m  &mt HYPER  SEMI

#define  __w   &kp Z
#define  __x   &kp X
#define  __c   &kp C
#define  __v   &kp V
#define  __b   &kp B
#define  __n   &kp N
#define  __cm  &kp M     // ,
#define  __dt  &kp COMMA // .
#define  __qu  &kp DOT   // ?
#define  __sq  &kp FSLH  // '

#define  __ESC  &kp ESC
#define  __RET  &kp RET
#define  __SPC  &kp SPACE
#define  __BSP  &kp BSPC


// SHIFTED DEFAULT

#define  __A  &kp LS(Q)
#define  __Z  &kp LS(W)
#define  __E  &kp LS(E)
#define  __R  &kp LS(R)
#define  __T  &kp LS(T)
#define  __Y  &kp LS(Y)
#define  __U  &kp LS(U)
#define  __I  &kp LS(I)
#define  __O  &kp LS(O)
#define  __P  &kp LS(P)

#define  __H_Q  &mt HYPER  LS(A)
#define  __A_S  &mt LALT   LS(S)
#define  __C_D  &mt LCTRL  LS(D)
#define  __S_F  &mt LSHIFT LS(F)
#define  __M_G  &mt LGUI   LS(G)
#define  __M_H  &mt LGUI   LS(H)
#define  __S_J  &mt LSHIFT LS(J)
#define  __C_K  &mt LCTRL  LS(K)
#define  __A_L  &mt LALT   LS(L)
#define  __H_M  &mt HYPER  LS(SEMI)

#define  __W   &kp LS(Z)
#define  __X   &kp LS(X)
#define  __C   &kp LS(C)
#define  __V   &kp LS(V)
#define  __B   &kp LS(B)
#define  __N   &kp LS(N)
#define  __sc  &kp LS(M) // ;
#define  __co  &kp DOT   // :
#define  __ex  &kp N8    // !
#define  __dq  &kp N3    // "

#define  __TAB  &kp TAB
#define  __DEL  &kp DEL


/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
// ╭─────────┬─────────┬─────────┬─────────┬─────────╮   ╭─────────┬─────────┬─────────┬─────────┬─────────╮
       __a       __z       __e       __r       __t           __y       __u       __i       __o       __p
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
     __H_q     __A_s     __C_d     __S_f     __M_g         __M_h     __S_j     __C_k     __A_l     __H_m
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
       __w       __x       __c       __v       __b           __n      __cm      __dt      __qu      __sq
// ╰─────────┴─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┴─────────╯
                          __ESC     __RET     LOWER         RAISE     __SPC     __BSP
//                     ╰─────────┴─────────┴─────────╯   ╰─────────┴─────────┴─────────╯
      >;
    };

    shifted_default_layer {
      bindings = <
// ╭─────────┬─────────┬─────────┬─────────┬─────────╮   ╭─────────┬─────────┬─────────┬─────────┬─────────╮
       __A       __Z       __E       __R       __T           __Y       __U       __I       __O       __P
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
     __H_Q     __A_S     __C_D     __S_F     __M_G         __M_H     __S_J     __C_K     __A_L     __H_M
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
       __W       __X       __C       __V       __B           __N      __sc      __co      __ex      __dq
// ╰─────────┴─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┴─────────╯
                           ___       ___       ___           ___      __TAB     __DEL
//                     ╰─────────┴─────────┴─────────╯   ╰─────────┴─────────┴─────────╯
      >;
    };

    // symbol_layer {
    //   bindings = <
    //   >;
    // };

    // num_nav_layer {
    //   bindings = <
    //   >;
    // };
  };
};

// TODO:
// Cut, Copy, Paste, Undo, Redo
// Media and volume control
// Screen brightness control
// Underglow RGB control
// BTLE control
// Function keys
// Printscreen
